% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/01_Knights_Tour.R
\name{kt_solve_recursively}
\alias{kt_solve_recursively}
\title{Find a knight's tour recursively}
\usage{
kt_solve_recursively(N = 8, position = c(i = 1, j = 1),
  moves = list(c(2, 1), c(1, 2), c(-1, 2), c(-2, 1), c(-2, -1), c(-1,
  -2), c(1, -2), c(2, -1)), solution = matrix(c(1, rep(NA_integer_, N^2 -
  1)), nrow = N), last_move = c(i = 0, j = 0),
  pb = txtProgressBar(style = 3))
}
\arguments{
\item{N}{The size of the NxN chess board.}

\item{position}{A numeric vector of length 2 describing the coordinates of
the proposed next position on a chess board.}

\item{moves}{List of numeric vectors describing the valid moves a kight can
make in a game of chess.}

\item{solution}{Numeric NxN matrix describing the (possibly partial) knight's
tour.}

\item{last_move}{Numeric vector of length 2 describing the last move in the
(possibly partial) knight's tour.}

\item{pb}{Text progress bar to view progress in constructing a knight's tour.}
}
\value{
A NxN matrix describing a knight's tour if a solution exists.
  Otherwise \code{FALSE}.
}
\description{
Recursively search for a knight's tour on a NxN chess board. Currently
returns no more than one solution. The knight begins on a corner square.
}
\examples{
kt_solve_recursively(N = 5)
}
